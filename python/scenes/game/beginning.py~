import pygame as pg
# from pytmx import load_pygame
import pytmx

from scenes.base import Scene

class TowerFloor1(Scene):
    "Tower in which the player starts playing (floor 1)"

    def __init__(self, player, position=(3, 3)):
        super(TowerFloor1, self).__init__()
        self.tmxdata = pytmx.load_pygame("resources/maps/tower_test2.tmx")
        self.player = player

    def update(self, delta):
        if self.player.moving:
            self.player.forward()
            if self.player.direction == "up":
                self.playeroldy = self.playery
                self.playery -= 1 # int(delta * 0.05)
                print(delta)
                # layer = self.tmxdata.get_layer_by_name("ColliderBlocks")
                # if layer.get
            elif self.player.direction == "down":
                self.playeroldy = self.playery
                self.playery += 1 # int(delta * 0.05)

    def render(self, screen):
        # size_w, size_h = screen.get_size()
        # w, h = self.tmxdata.width, self.tmxdata.height
        # wanted_w, wanted_h = (int(size_w / w), int(size_h / h))
        # print(wanted_w, wanted_h)
        wanted_w, wanted_h = 32, 32
        if self.tmxdata.background_color:
            screen.fill(pygame.Color(self.tmxdata.background_color))

        for layer in self.tmxdata.visible_layers:
            if isinstance(layer, pytmx.TiledTileLayer):
                for x, y, image in layer.tiles():
                    image = pg.transform.scale(image, (wanted_w, wanted_h))
                    screen.blit(image, (x * wanted_w, y * wanted_h))
        screen.blit(self.player.get_image((32, 32)), (self.playerx * 32, self.playery * 32))

    def handle_events(self, events):
        for e in events:
            if e.type == pg.KEYDOWN:
                if e.key == pg.K_UP:
                    self.player.move_up()
                    self.player.moving = True
                elif e.key == pg.K_DOWN:
                    self.player.move_down()
                    self.player.moving = True
            elif e.type == pg.KEYUP:
                if e.key == pg.K_UP and self.player.direction == "up":
                    self.player.moving = False
                if e.key == pg.K_DOWN and self.player.direction == "down":
                    self.player.moving = False
